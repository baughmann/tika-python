
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util
import jpype
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic
import typing



class ObjectSpaceObjectPropSet:
    oids: 'ObjectSpaceObjectStreamOfOIDs' = ...
    osids: 'ObjectSpaceObjectStreamOfOSIDs' = ...
    contextIDs: 'ObjectSpaceObjectStreamOfContextIDs' = ...
    body: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.PropertySet = ...
    padding: typing.MutableSequence[int] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class ObjectSpaceObjectStreamHeader:
    count: int = ...
    reserved: int = ...
    extendedStreamsPresent: int = ...
    osidStreamNotPresent: int = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class ObjectSpaceObjectStreamOfContextIDs:
    header: ObjectSpaceObjectStreamHeader = ...
    body: typing.MutableSequence[org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CompactID] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class ObjectSpaceObjectStreamOfOIDs:
    header: ObjectSpaceObjectStreamHeader = ...
    body: typing.MutableSequence[org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CompactID] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class ObjectSpaceObjectStreamOfOSIDs:
    header: ObjectSpaceObjectStreamHeader = ...
    body: typing.MutableSequence[org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CompactID] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.space")``.

    ObjectSpaceObjectPropSet: typing.Type[ObjectSpaceObjectPropSet]
    ObjectSpaceObjectStreamHeader: typing.Type[ObjectSpaceObjectStreamHeader]
    ObjectSpaceObjectStreamOfContextIDs: typing.Type[ObjectSpaceObjectStreamOfContextIDs]
    ObjectSpaceObjectStreamOfOIDs: typing.Type[ObjectSpaceObjectStreamOfOIDs]
    ObjectSpaceObjectStreamOfOSIDs: typing.Type[ObjectSpaceObjectStreamOfOSIDs]


import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.io
import java.lang
import org.apache.tika.extractor
import org.apache.tika.metadata
import org.apache.tika.pipes
import org.apache.tika.pipes.emitter
import typing



class EmbeddedDocumentBytesConfig(java.io.Serializable):
    SKIP: typing.ClassVar['EmbeddedDocumentBytesConfig'] = ...
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, boolean: bool): ...
    def equals(self, object: typing.Any) -> bool: ...
    def getEmbeddedIdPrefix(self) -> str: ...
    def getEmitKeyBase(self) -> str: ...
    def getEmitter(self) -> str: ...
    @staticmethod
    def getSKIP() -> 'EmbeddedDocumentBytesConfig': ...
    def getSuffixStrategy(self) -> 'EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY': ...
    def getZeroPadName(self) -> int: ...
    def hashCode(self) -> int: ...
    def isExtractEmbeddedDocumentBytes(self) -> bool: ...
    def isIncludeOriginal(self) -> bool: ...
    def setEmbeddedIdPrefix(self, string: str) -> None: ...
    def setEmitKeyBase(self, string: str) -> None: ...
    def setEmitter(self, string: str) -> None: ...
    def setExtractEmbeddedDocumentBytes(self, boolean: bool) -> None: ...
    def setIncludeOriginal(self, boolean: bool) -> None: ...
    @typing.overload
    def setSuffixStrategy(self, string: str) -> None: ...
    @typing.overload
    def setSuffixStrategy(self, sUFFIX_STRATEGY: 'EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY') -> None: ...
    def setZeroPadName(self, int: int) -> None: ...
    def toString(self) -> str: ...
    class SUFFIX_STRATEGY(java.lang.Enum['EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY']):
        NONE: typing.ClassVar['EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY'] = ...
        EXISTING: typing.ClassVar['EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY'] = ...
        DETECTED: typing.ClassVar['EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY'] = ...
        @staticmethod
        def parse(string: str) -> 'EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY': ...
        _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
        @typing.overload
        @staticmethod
        def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
        @typing.overload
        @staticmethod
        def valueOf(string: str) -> 'EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY': ...
        @staticmethod
        def values() -> typing.MutableSequence['EmbeddedDocumentBytesConfig.SUFFIX_STRATEGY']: ...

class EmittingEmbeddedDocumentBytesHandler(org.apache.tika.extractor.AbstractEmbeddedDocumentBytesHandler):
    def __init__(self, fetchEmitTuple: org.apache.tika.pipes.FetchEmitTuple, emitterManager: org.apache.tika.pipes.emitter.EmitterManager): ...
    def add(self, int: int, metadata: org.apache.tika.metadata.Metadata, inputStream: java.io.InputStream) -> None: ...
    def close(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.pipes.extractor")``.

    EmbeddedDocumentBytesConfig: typing.Type[EmbeddedDocumentBytesConfig]
    EmittingEmbeddedDocumentBytesHandler: typing.Type[EmittingEmbeddedDocumentBytesHandler]

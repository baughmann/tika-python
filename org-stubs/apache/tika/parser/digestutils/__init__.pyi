
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import org.apache.tika.parser
import org.apache.tika.parser.digest
import typing



class BouncyCastleDigester(org.apache.tika.parser.digest.CompositeDigester):
    def __init__(self, int: int, string: str): ...

class CommonsDigester(org.apache.tika.parser.digest.CompositeDigester):
    @typing.overload
    def __init__(self, int: int, string: str): ...
    @typing.overload
    def __init__(self, int: int, *digestAlgorithm: 'CommonsDigester.DigestAlgorithm'): ...
    @staticmethod
    def parse(string: str) -> typing.MutableSequence['CommonsDigester.DigestAlgorithm']: ...
    class DigestAlgorithm(java.lang.Enum['CommonsDigester.DigestAlgorithm']):
        MD2: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        MD5: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        SHA1: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        SHA256: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        SHA384: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        SHA512: typing.ClassVar['CommonsDigester.DigestAlgorithm'] = ...
        _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
        @typing.overload
        @staticmethod
        def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
        @typing.overload
        @staticmethod
        def valueOf(string: str) -> 'CommonsDigester.DigestAlgorithm': ...
        @staticmethod
        def values() -> typing.MutableSequence['CommonsDigester.DigestAlgorithm']: ...

class CommonsDigesterFactory(org.apache.tika.parser.DigestingParser.DigesterFactory):
    def __init__(self): ...
    def build(self) -> org.apache.tika.parser.DigestingParser.Digester: ...
    def isSkipContainerDocument(self) -> bool: ...
    def setAlgorithmString(self, string: str) -> None: ...
    def setMarkLimit(self, int: int) -> None: ...
    def setSkipContainerDocument(self, boolean: bool) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.digestutils")``.

    BouncyCastleDigester: typing.Type[BouncyCastleDigester]
    CommonsDigester: typing.Type[CommonsDigester]
    CommonsDigesterFactory: typing.Type[CommonsDigesterFactory]

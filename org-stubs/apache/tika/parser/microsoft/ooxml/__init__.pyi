
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.io
import java.lang
import java.math
import java.util
import jpype
import org.apache.poi.ooxml
import org.apache.poi.ooxml.extractor
import org.apache.poi.openxml4j.opc
import org.apache.poi.xslf.extractor
import org.apache.poi.xssf.eventusermodel
import org.apache.poi.xssf.model
import org.apache.poi.xwpf.extractor
import org.apache.poi.xwpf.usermodel
import org.apache.tika.metadata
import org.apache.tika.mime
import org.apache.tika.parser
import org.apache.tika.parser.microsoft
import org.apache.tika.parser.microsoft.ooxml.xps
import org.apache.tika.parser.microsoft.ooxml.xslf
import org.apache.tika.parser.microsoft.ooxml.xwpf
import org.apache.tika.sax
import org.xml.sax
import org.xml.sax.helpers
import typing



class EmbeddedPartMetadata:
    def __init__(self, string: str): ...
    def getEmfRelationshipId(self) -> str: ...
    def getFullName(self) -> str: ...
    def getProgId(self) -> str: ...
    def getRenderedName(self) -> str: ...
    def setFullName(self, string: str) -> None: ...
    def setProgId(self, string: str) -> None: ...
    def setRenderedName(self, string: str) -> None: ...

class MetadataExtractor:
    def __init__(self, pOIXMLTextExtractor: org.apache.poi.ooxml.extractor.POIXMLTextExtractor): ...
    def extract(self, metadata: org.apache.tika.metadata.Metadata) -> None: ...

class OOXMLExtractor:
    def getDocument(self) -> org.apache.poi.ooxml.POIXMLDocument: ...
    def getMetadataExtractor(self) -> MetadataExtractor: ...
    def getXHTML(self, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...

class OOXMLExtractorFactory:
    def __init__(self): ...
    @staticmethod
    def parse(inputStream: java.io.InputStream, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...

class OOXMLParser(org.apache.tika.parser.microsoft.AbstractOfficeParser):
    def __init__(self): ...
    def getSupportedTypes(self, parseContext: org.apache.tika.parser.ParseContext) -> java.util.Set[org.apache.tika.mime.MediaType]: ...
    def parse(self, inputStream: java.io.InputStream, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...

class OOXMLWordAndPowerPointTextHandler(org.xml.sax.helpers.DefaultHandler):
    W_NS: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xWPFBodyContentsHandler: 'OOXMLWordAndPowerPointTextHandler.XWPFBodyContentsHandler', map: typing.Union[java.util.Map[str, str], typing.Mapping[str, str]]): ...
    @typing.overload
    def __init__(self, xWPFBodyContentsHandler: 'OOXMLWordAndPowerPointTextHandler.XWPFBodyContentsHandler', map: typing.Union[java.util.Map[str, str], typing.Mapping[str, str]], boolean: bool, boolean2: bool): ...
    def characters(self, charArray: typing.Union[typing.List[str], jpype.JArray], int: int, int2: int) -> None: ...
    def endDocument(self) -> None: ...
    def endElement(self, string: str, string2: str, string3: str) -> None: ...
    def endPrefixMapping(self, string: str) -> None: ...
    def ignorableWhitespace(self, charArray: typing.Union[typing.List[str], jpype.JArray], int: int, int2: int) -> None: ...
    def startDocument(self) -> None: ...
    def startElement(self, string: str, string2: str, string3: str, attributes: org.xml.sax.Attributes) -> None: ...
    def startPrefixMapping(self, string: str, string2: str) -> None: ...
    class EditType(java.lang.Enum['OOXMLWordAndPowerPointTextHandler.EditType']):
        NONE: typing.ClassVar['OOXMLWordAndPowerPointTextHandler.EditType'] = ...
        INSERT: typing.ClassVar['OOXMLWordAndPowerPointTextHandler.EditType'] = ...
        DELETE: typing.ClassVar['OOXMLWordAndPowerPointTextHandler.EditType'] = ...
        MOVE_TO: typing.ClassVar['OOXMLWordAndPowerPointTextHandler.EditType'] = ...
        MOVE_FROM: typing.ClassVar['OOXMLWordAndPowerPointTextHandler.EditType'] = ...
        _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
        @typing.overload
        @staticmethod
        def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
        @typing.overload
        @staticmethod
        def valueOf(string: str) -> 'OOXMLWordAndPowerPointTextHandler.EditType': ...
        @staticmethod
        def values() -> typing.MutableSequence['OOXMLWordAndPowerPointTextHandler.EditType']: ...
    class XWPFBodyContentsHandler:
        def embeddedOLERef(self, string: str) -> None: ...
        def embeddedPicRef(self, string: str, string2: str) -> None: ...
        def endBookmark(self, string: str) -> None: ...
        def endEditedSection(self) -> None: ...
        def endParagraph(self) -> None: ...
        def endSDT(self) -> None: ...
        def endTable(self) -> None: ...
        def endTableCell(self) -> None: ...
        def endTableRow(self) -> None: ...
        def endnoteReference(self, string: str) -> None: ...
        def footnoteReference(self, string: str) -> None: ...
        def hyperlinkEnd(self) -> None: ...
        def hyperlinkStart(self, string: str) -> None: ...
        def isIncludeDeletedText(self) -> bool: ...
        def isIncludeMoveFromText(self) -> bool: ...
        def run(self, runProperties: 'RunProperties', string: str) -> None: ...
        def startBookmark(self, string: str, string2: str) -> None: ...
        def startEditedSection(self, string: str, date: java.util.Date, editType: 'OOXMLWordAndPowerPointTextHandler.EditType') -> None: ...
        def startParagraph(self, paragraphProperties: 'ParagraphProperties') -> None: ...
        def startSDT(self) -> None: ...
        def startTable(self) -> None: ...
        def startTableCell(self) -> None: ...
        def startTableRow(self) -> None: ...

class OPCPackageWrapper(java.io.Closeable):
    def __init__(self, oPCPackage: org.apache.poi.openxml4j.opc.OPCPackage): ...
    def close(self) -> None: ...
    def getOPCPackage(self) -> org.apache.poi.openxml4j.opc.OPCPackage: ...

class ParagraphProperties:
    def __init__(self): ...
    def getIlvl(self) -> int: ...
    def getNumId(self) -> int: ...
    def getStyleID(self) -> str: ...
    def reset(self) -> None: ...
    def setIlvl(self, int: int) -> None: ...
    def setNumId(self, int: int) -> None: ...
    def setStyleID(self, string: str) -> None: ...

class RunProperties:
    def __init__(self): ...
    def getUnderline(self) -> org.apache.poi.xwpf.usermodel.UnderlinePatterns: ...
    def isBold(self) -> bool: ...
    def isItalics(self) -> bool: ...
    def isStrikeThrough(self) -> bool: ...
    def setBold(self, boolean: bool) -> None: ...
    def setItalics(self, boolean: bool) -> None: ...
    def setStrike(self, boolean: bool) -> None: ...
    def setUnderline(self, string: str) -> None: ...

class XWPFListManager(org.apache.tika.parser.microsoft.AbstractListManager):
    EMPTY_LIST: typing.ClassVar['XWPFListManager'] = ...
    def __init__(self, xWPFNumbering: org.apache.poi.xwpf.usermodel.XWPFNumbering): ...
    @typing.overload
    def getFormattedNumber(self, bigInteger: java.math.BigInteger, int: int) -> str: ...
    @typing.overload
    def getFormattedNumber(self, xWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFParagraph) -> str: ...

class AbstractOOXMLExtractor(OOXMLExtractor):
    def __init__(self, parseContext: org.apache.tika.parser.ParseContext, pOIXMLTextExtractor: org.apache.poi.ooxml.extractor.POIXMLTextExtractor): ...
    def getDocument(self) -> org.apache.poi.ooxml.POIXMLDocument: ...
    def getMetadataExtractor(self) -> MetadataExtractor: ...
    def getXHTML(self, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...

class OOXMLTikaBodyPartHandler(OOXMLWordAndPowerPointTextHandler.XWPFBodyContentsHandler):
    @typing.overload
    def __init__(self, xHTMLContentHandler: org.apache.tika.sax.XHTMLContentHandler): ...
    @typing.overload
    def __init__(self, xHTMLContentHandler: org.apache.tika.sax.XHTMLContentHandler, xWPFStylesShim: org.apache.tika.parser.microsoft.ooxml.xwpf.XWPFStylesShim, xWPFListManager: XWPFListManager, officeParserConfig: org.apache.tika.parser.microsoft.OfficeParserConfig): ...
    def embeddedOLERef(self, string: str) -> None: ...
    def embeddedPicRef(self, string: str, string2: str) -> None: ...
    def endBookmark(self, string: str) -> None: ...
    def endEditedSection(self) -> None: ...
    def endParagraph(self) -> None: ...
    def endSDT(self) -> None: ...
    def endTable(self) -> None: ...
    def endTableCell(self) -> None: ...
    def endTableRow(self) -> None: ...
    def endnoteReference(self, string: str) -> None: ...
    def footnoteReference(self, string: str) -> None: ...
    def hyperlinkEnd(self) -> None: ...
    def hyperlinkStart(self, string: str) -> None: ...
    def isIncludeDeletedText(self) -> bool: ...
    def isIncludeMoveFromText(self) -> bool: ...
    def run(self, runProperties: RunProperties, string: str) -> None: ...
    def startBookmark(self, string: str, string2: str) -> None: ...
    def startEditedSection(self, string: str, date: java.util.Date, editType: OOXMLWordAndPowerPointTextHandler.EditType) -> None: ...
    def startParagraph(self, paragraphProperties: ParagraphProperties) -> None: ...
    def startSDT(self) -> None: ...
    def startTable(self) -> None: ...
    def startTableCell(self) -> None: ...
    def startTableRow(self) -> None: ...

class POIXMLTextExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, parseContext: org.apache.tika.parser.ParseContext, pOIXMLTextExtractor: org.apache.poi.ooxml.extractor.POIXMLTextExtractor): ...

class SXSLFPowerPointExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext, xSLFEventBasedPowerPointExtractor: org.apache.tika.parser.microsoft.ooxml.xslf.XSLFEventBasedPowerPointExtractor): ...

class SXWPFWordExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext, xWPFEventBasedWordExtractor: org.apache.tika.parser.microsoft.ooxml.xwpf.XWPFEventBasedWordExtractor): ...

class XSLFPowerPointExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext, xSLFExtractor: org.apache.poi.xslf.extractor.XSLFExtractor): ...

class XSSFExcelExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, parseContext: org.apache.tika.parser.ParseContext, pOIXMLTextExtractor: org.apache.poi.ooxml.extractor.POIXMLTextExtractor, locale: java.util.Locale): ...
    def getXHTML(self, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...
    def processSheet(self, sheetContentsHandler: org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler.SheetContentsHandler, comments: org.apache.poi.xssf.model.Comments, stylesTable: org.apache.poi.xssf.model.StylesTable, readOnlySharedStringsTable: org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable, inputStream: java.io.InputStream) -> None: ...

class XWPFWordExtractorDecorator(AbstractOOXMLExtractor):
    def __init__(self, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext, xWPFWordExtractor: org.apache.poi.xwpf.extractor.XWPFWordExtractor): ...

class XSSFBExcelExtractorDecorator(XSSFExcelExtractorDecorator):
    def __init__(self, parseContext: org.apache.tika.parser.ParseContext, pOIXMLTextExtractor: org.apache.poi.ooxml.extractor.POIXMLTextExtractor, locale: java.util.Locale): ...
    def getXHTML(self, contentHandler: org.xml.sax.ContentHandler, metadata: org.apache.tika.metadata.Metadata, parseContext: org.apache.tika.parser.ParseContext) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.microsoft.ooxml")``.

    AbstractOOXMLExtractor: typing.Type[AbstractOOXMLExtractor]
    EmbeddedPartMetadata: typing.Type[EmbeddedPartMetadata]
    MetadataExtractor: typing.Type[MetadataExtractor]
    OOXMLExtractor: typing.Type[OOXMLExtractor]
    OOXMLExtractorFactory: typing.Type[OOXMLExtractorFactory]
    OOXMLParser: typing.Type[OOXMLParser]
    OOXMLTikaBodyPartHandler: typing.Type[OOXMLTikaBodyPartHandler]
    OOXMLWordAndPowerPointTextHandler: typing.Type[OOXMLWordAndPowerPointTextHandler]
    OPCPackageWrapper: typing.Type[OPCPackageWrapper]
    POIXMLTextExtractorDecorator: typing.Type[POIXMLTextExtractorDecorator]
    ParagraphProperties: typing.Type[ParagraphProperties]
    RunProperties: typing.Type[RunProperties]
    SXSLFPowerPointExtractorDecorator: typing.Type[SXSLFPowerPointExtractorDecorator]
    SXWPFWordExtractorDecorator: typing.Type[SXWPFWordExtractorDecorator]
    XSLFPowerPointExtractorDecorator: typing.Type[XSLFPowerPointExtractorDecorator]
    XSSFBExcelExtractorDecorator: typing.Type[XSSFBExcelExtractorDecorator]
    XSSFExcelExtractorDecorator: typing.Type[XSSFExcelExtractorDecorator]
    XWPFListManager: typing.Type[XWPFListManager]
    XWPFWordExtractorDecorator: typing.Type[XWPFWordExtractorDecorator]
    xps: org.apache.tika.parser.microsoft.ooxml.xps.__module_protocol__
    xslf: org.apache.tika.parser.microsoft.ooxml.xslf.__module_protocol__
    xwpf: org.apache.tika.parser.microsoft.ooxml.xwpf.__module_protocol__

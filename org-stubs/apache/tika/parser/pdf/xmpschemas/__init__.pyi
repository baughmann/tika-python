
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util
import org.apache.jempbox.xmp
import org.w3c.dom
import typing



class XMPSchemaIllustrator(org.apache.jempbox.xmp.XMPSchema):
    NAMESPACE_URI: typing.ClassVar[str] = ...
    NAMESPACE: typing.ClassVar[str] = ...
    ILLUSTRATOR: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xMPMetadata: org.apache.jempbox.xmp.XMPMetadata): ...
    @typing.overload
    def __init__(self, element: org.w3c.dom.Element, string: str): ...
    def getType(self) -> str: ...

class XMPSchemaPDFUA(org.apache.jempbox.xmp.XMPSchema):
    NAMESPACE_URI: typing.ClassVar[str] = ...
    NAMESPACE: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xMPMetadata: org.apache.jempbox.xmp.XMPMetadata): ...
    @typing.overload
    def __init__(self, element: org.w3c.dom.Element, string: str): ...
    def getPart(self) -> int: ...

class XMPSchemaPDFVT(org.apache.jempbox.xmp.XMPSchema):
    NAMESPACE_URI: typing.ClassVar[str] = ...
    NAMESPACE: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xMPMetadata: org.apache.jempbox.xmp.XMPMetadata): ...
    @typing.overload
    def __init__(self, element: org.w3c.dom.Element, string: str): ...
    def getPDFVTModified(self) -> java.util.Calendar: ...
    def getPDFVTVersion(self) -> str: ...

class XMPSchemaPDFX(org.apache.jempbox.xmp.XMPSchema):
    NAMESPACE_URI: typing.ClassVar[str] = ...
    NAMESPACE: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xMPMetadata: org.apache.jempbox.xmp.XMPMetadata): ...
    @typing.overload
    def __init__(self, element: org.w3c.dom.Element, string: str): ...
    def getPDFXConformance(self) -> str: ...
    def getPDFXVersion(self) -> str: ...

class XMPSchemaPDFXId(org.apache.jempbox.xmp.XMPSchema):
    NAMESPACE_URI: typing.ClassVar[str] = ...
    NAMESPACE: typing.ClassVar[str] = ...
    @typing.overload
    def __init__(self, xMPMetadata: org.apache.jempbox.xmp.XMPMetadata): ...
    @typing.overload
    def __init__(self, element: org.w3c.dom.Element, string: str): ...
    def getPDFXVersion(self) -> str: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.pdf.xmpschemas")``.

    XMPSchemaIllustrator: typing.Type[XMPSchemaIllustrator]
    XMPSchemaPDFUA: typing.Type[XMPSchemaPDFUA]
    XMPSchemaPDFVT: typing.Type[XMPSchemaPDFVT]
    XMPSchemaPDFX: typing.Type[XMPSchemaPDFX]
    XMPSchemaPDFXId: typing.Type[XMPSchemaPDFXId]

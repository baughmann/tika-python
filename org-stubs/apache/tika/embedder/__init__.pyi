
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.io
import java.util
import jpype
import org.apache.tika.metadata
import org.apache.tika.mime
import org.apache.tika.parser
import typing



class Embedder(java.io.Serializable):
    def embed(self, metadata: org.apache.tika.metadata.Metadata, inputStream: java.io.InputStream, outputStream: java.io.OutputStream, parseContext: org.apache.tika.parser.ParseContext) -> None: ...
    def getSupportedEmbedTypes(self, parseContext: org.apache.tika.parser.ParseContext) -> java.util.Set[org.apache.tika.mime.MediaType]: ...

class ExternalEmbedder(Embedder):
    METADATA_COMMAND_ARGUMENTS_TOKEN: typing.ClassVar[str] = ...
    METADATA_COMMAND_ARGUMENTS_SERIALIZED_TOKEN: typing.ClassVar[str] = ...
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def check(string: str, *int: int) -> bool: ...
    @typing.overload
    @staticmethod
    def check(stringArray: typing.Union[typing.List[str], jpype.JArray], *int: int) -> bool: ...
    def embed(self, metadata: org.apache.tika.metadata.Metadata, inputStream: java.io.InputStream, outputStream: java.io.OutputStream, parseContext: org.apache.tika.parser.ParseContext) -> None: ...
    def getCommand(self) -> typing.MutableSequence[str]: ...
    def getCommandAppendOperator(self) -> str: ...
    def getCommandAssignmentDelimeter(self) -> str: ...
    def getCommandAssignmentOperator(self) -> str: ...
    def getMetadataCommandArguments(self) -> java.util.Map[org.apache.tika.metadata.Property, typing.MutableSequence[str]]: ...
    @typing.overload
    def getSupportedEmbedTypes(self) -> java.util.Set[org.apache.tika.mime.MediaType]: ...
    @typing.overload
    def getSupportedEmbedTypes(self, parseContext: org.apache.tika.parser.ParseContext) -> java.util.Set[org.apache.tika.mime.MediaType]: ...
    def isQuoteAssignmentValues(self) -> bool: ...
    def setCommand(self, *string: str) -> None: ...
    def setCommandAppendOperator(self, string: str) -> None: ...
    def setCommandAssignmentDelimeter(self, string: str) -> None: ...
    def setCommandAssignmentOperator(self, string: str) -> None: ...
    def setMetadataCommandArguments(self, map: typing.Union[java.util.Map[org.apache.tika.metadata.Property, typing.Union[typing.List[str], jpype.JArray]], typing.Mapping[org.apache.tika.metadata.Property, typing.Union[typing.List[str], jpype.JArray]]]) -> None: ...
    def setQuoteAssignmentValues(self, boolean: bool) -> None: ...
    def setSupportedEmbedTypes(self, set: java.util.Set[org.apache.tika.mime.MediaType]) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.embedder")``.

    Embedder: typing.Type[Embedder]
    ExternalEmbedder: typing.Type[ExternalEmbedder]

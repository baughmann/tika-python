
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import de.l3s.boilerpipe
import de.l3s.boilerpipe.document
import de.l3s.boilerpipe.sax
import java.io
import jpype
import org.xml.sax
import typing



class BoilerpipeContentHandler(de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler):
    @typing.overload
    def __init__(self, writer: java.io.Writer): ...
    @typing.overload
    def __init__(self, contentHandler: org.xml.sax.ContentHandler): ...
    @typing.overload
    def __init__(self, contentHandler: org.xml.sax.ContentHandler, boilerpipeExtractor: de.l3s.boilerpipe.BoilerpipeExtractor): ...
    def characters(self, charArray: typing.Union[typing.List[str], jpype.JArray], int: int, int2: int) -> None: ...
    def endDocument(self) -> None: ...
    def endElement(self, string: str, string2: str, string3: str) -> None: ...
    def getTextDocument(self) -> de.l3s.boilerpipe.document.TextDocument: ...
    def isIncludeMarkup(self) -> bool: ...
    def setIncludeMarkup(self, boolean: bool) -> None: ...
    def startDocument(self) -> None: ...
    def startElement(self, string: str, string2: str, string3: str, attributes: org.xml.sax.Attributes) -> None: ...
    def startPrefixMapping(self, string: str, string2: str) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.sax.boilerpipe")``.

    BoilerpipeContentHandler: typing.Type[BoilerpipeContentHandler]


import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import java.util
import java.util.concurrent.atomic
import jpype
import org.apache.tika.parser.microsoft.onenote.fsshttpb
import org.apache.tika.parser.microsoft.onenote.fsshttpb.property
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.chunking
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.space
import typing



class DataElementData(org.apache.tika.parser.microsoft.onenote.fsshttpb.IFSSHTTPBSerializable):
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class JCIDObject:
    objectDeclaration: 'ObjectGroupObjectDeclare' = ...
    jcid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.JCID = ...
    def __init__(self, objectGroupObjectDeclare: 'ObjectGroupObjectDeclare', objectGroupObjectData: 'ObjectGroupObjectData'): ...

class PropertySet(org.apache.tika.parser.microsoft.onenote.fsshttpb.property.IProperty):
    cProperties: int = ...
    rgPrids: typing.MutableSequence[org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.PropertyID] = ...
    rgData: java.util.List = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class PropertySetObject:
    objectDeclaration: 'ObjectGroupObjectDeclare' = ...
    objectSpaceObjectPropSet: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.space.ObjectSpaceObjectPropSet = ...
    def __init__(self, objectGroupObjectDeclare: 'ObjectGroupObjectDeclare', objectGroupObjectData: 'ObjectGroupObjectData'): ...

class RevisionStoreObject:
    objectID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objectGroupID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    jcid: JCIDObject = ...
    propertySet: PropertySetObject = ...
    fileDataObject: 'FileDataObject' = ...
    referencedObjectID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGUIDArray = ...
    referencedObjectSpacesID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CellIDArray = ...
    def __init__(self): ...

class RevisionStoreObjectGroup:
    objectGroupID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objects: java.util.List = ...
    encryptionObjects: java.util.List = ...
    def __init__(self, exGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid): ...
    @staticmethod
    def createInstance(exGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid, objectGroupDataElementData: 'ObjectGroupDataElementData', boolean: bool) -> 'RevisionStoreObjectGroup': ...

class StreamObject(org.apache.tika.parser.microsoft.onenote.fsshttpb.IFSSHTTPBSerializable):
    def deserializeFromByteArray(self, streamObjectHeaderStart: 'StreamObjectHeaderStart', byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    @staticmethod
    def getCompoundTypes() -> java.util.Set['StreamObjectTypeHeaderStart']: ...
    _getCurrent__T = typing.TypeVar('_getCurrent__T', bound='StreamObject')  # <T>
    @staticmethod
    def getCurrent(byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], atomicInteger: java.util.concurrent.atomic.AtomicInteger, class_: typing.Type[_getCurrent__T]) -> _getCurrent__T: ...
    @staticmethod
    def getStreamObjectTypeMapping() -> java.util.Map['StreamObjectTypeHeaderStart', typing.Type]: ...
    @staticmethod
    def parseStreamObject(streamObjectHeaderStart: 'StreamObjectHeaderStart', byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], atomicInteger: java.util.concurrent.atomic.AtomicInteger) -> 'StreamObject': ...
    def serializeToByteList(self) -> java.util.List[int]: ...
    _tryGetCurrent__T = typing.TypeVar('_tryGetCurrent__T', bound='StreamObject')  # <T>
    @staticmethod
    def tryGetCurrent(byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], atomicInteger: java.util.concurrent.atomic.AtomicInteger, atomicReference: java.util.concurrent.atomic.AtomicReference[_tryGetCurrent__T], class_: typing.Type[_tryGetCurrent__T]) -> bool: ...

class StreamObjectHeaderEnd(org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BasicObject):
    def __init__(self): ...

class StreamObjectHeaderStart(org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BasicObject):
    STREAM_OBJECT_HEADER_START_16_BIT: typing.ClassVar[int] = ...
    STREAM_OBJECT_HEADER_START_32_BIT: typing.ClassVar[int] = ...
    type: 'StreamObjectTypeHeaderStart' = ...
    @staticmethod
    def tryParse(byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int, atomicReference: java.util.concurrent.atomic.AtomicReference['StreamObjectHeaderStart']) -> int: ...

class StreamObjectParseErrorException(java.lang.RuntimeException):
    index: int = ...
    streamObjectTypeName: str = ...
    @typing.overload
    def __init__(self, int: int, string: str, exception: java.lang.Exception): ...
    @typing.overload
    def __init__(self, int: int, string: str, string2: str, exception: java.lang.Exception): ...

class StreamObjectTypeHeaderEnd(java.lang.Enum['StreamObjectTypeHeaderEnd']):
    DataElement: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    Knowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    CellKnowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    DataElementPackage: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    ObjectGroupDeclarations: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    ObjectGroupData: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    IntermediateNodeEnd: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    RootNodeEnd: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    WaterlineKnowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    ContentTagKnowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    Request: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    SubResponse: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    SubRequest: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    ReadAccessResponse: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    SpecializedKnowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    WriteAccessResponse: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    QueryChangesFilter: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    Error: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    QueryChangesRequest: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    UserAgent: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    Response: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    FragmentKnowledge: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    ObjectGroupMetadataDeclarations: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    AlternativePackaging: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    TargetPartitionId: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    UserAgentClientandPlatform: typing.ClassVar['StreamObjectTypeHeaderEnd'] = ...
    @staticmethod
    def fromIntVal(int: int) -> 'StreamObjectTypeHeaderEnd': ...
    def getIntVal(self) -> int: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'StreamObjectTypeHeaderEnd': ...
    @staticmethod
    def values() -> typing.MutableSequence['StreamObjectTypeHeaderEnd']: ...

class StreamObjectTypeHeaderStart(java.lang.Enum['StreamObjectTypeHeaderStart']):
    ErrorStringSupplementalInfo: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataElement: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectDataBLOB: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    WaterlineKnowledgeEntry: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupObjectBLOBDataDeclaration: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataElementHash: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    StorageManifestRootDeclare: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    RevisionManifestRootDeclare: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellManifestCurrentRevision: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    StorageManifestSchemaGUID: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    StorageIndexRevisionMapping: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    StorageIndexCellMapping: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellKnowledgeRange: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    Knowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    StorageIndexManifestMapping: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataElementPackage: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupObjectData: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellKnowledgeEntry: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupObjectDeclare: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    RevisionManifestObjectGroupReferences: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    RevisionManifest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupObjectDataBLOBReference: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupDeclarations: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupData: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    LeafNodeObject: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    IntermediateNodeObject: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    SignatureObject: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataSizeObject: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataHashObject: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    WaterlineKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ContentTagKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ContentTagKnowledgeEntry: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesVersioning: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    Request: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    FsshttpbSubResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    SubRequest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ReadAccessResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    SpecializedKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    PutChangesResponseSerialNumberReassignAll: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    WriteAccessResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilter: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    Win32Error: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ProtocolError: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ResponseError: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    UserAgentversion: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterSchemaSpecific: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesRequest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    HRESULTError: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    PutChangesResponseSerialNumberReassign: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterDataElementIDs: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    UserAgentGUID: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterDataElementType: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesDataConstraint: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    PutChangesRequest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesRequestArguments: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterCellID: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    UserAgent: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterHierarchy: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    FsshttpbResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryDataElementRequest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellError: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    QueryChangesFilterFlags: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DataElementFragment: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    FragmentKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    FragmentKnowledgeEntry: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupMetadataDeclarations: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    ObjectGroupMetadata: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    AlternativePackaging: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    AllocateExtendedGUIDRangeRequest: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    AllocateExtendedGUIDRangeResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    RequestHashOptions: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    TargetPartitionId: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    PutChangesResponse: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DiagnosticRequestOptionOutput: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    DiagnosticRequestOptionInput: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    AdditionalFlags: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    PutChangesLockId: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    VersionTokenKnowledge: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    CellRoundtripOptions: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    FileHash: typing.ClassVar['StreamObjectTypeHeaderStart'] = ...
    @staticmethod
    def fromIntVal(int: int) -> 'StreamObjectTypeHeaderStart': ...
    def getIntVal(self) -> int: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'StreamObjectTypeHeaderStart': ...
    @staticmethod
    def values() -> typing.MutableSequence['StreamObjectTypeHeaderStart']: ...

class FileDataObject: ...

class CellManifestCurrentRevision(StreamObject):
    cellManifestCurrentRevisionExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    def __init__(self): ...

class CellManifestDataElementData(DataElementData):
    cellManifestCurrentRevision: CellManifestCurrentRevision = ...
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class DataElement(StreamObject):
    dataElementExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    serialNumber: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.SerialNumber = ...
    dataElementType: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.DataElementType = ...
    data: DataElementData = ...
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, dataElementType: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.DataElementType, dataElementData: DataElementData): ...
    _getData__T = typing.TypeVar('_getData__T', bound=DataElementData)  # <T>
    def getData(self, class_: typing.Type[_getData__T]) -> _getData__T: ...

class DataElementHash(StreamObject):
    dataElementHashScheme: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    dataElementHashData: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BinaryItem = ...
    def __init__(self): ...

class DataElementPackage(StreamObject):
    dataElements: java.util.List = ...
    reserved: int = ...
    def __init__(self): ...

class DataHashObject(StreamObject):
    data: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BinaryItem = ...
    def __init__(self): ...
    def equals(self, object: typing.Any) -> bool: ...
    def hashCode(self) -> int: ...
    def toString(self) -> str: ...

class DataSizeObject(StreamObject):
    dataSize: int = ...
    def __init__(self): ...

class NodeObject(StreamObject):
    exGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    intermediateNodeObjectList: java.util.List = ...
    signature: 'SignatureObject' = ...
    dataSize: DataSizeObject = ...
    def getContent(self) -> java.util.List[int]: ...

class ObjectGroupData(StreamObject):
    objectGroupObjectDataList: java.util.List = ...
    objectGroupObjectDataBLOBReferenceList: java.util.List = ...
    def __init__(self): ...

class ObjectGroupDataElementData(DataElementData):
    dataElementHash: DataElementHash = ...
    objectGroupDeclarations: 'ObjectGroupDeclarations' = ...
    objectMetadataDeclaration: 'ObjectGroupMetadataDeclarations' = ...
    objectGroupData: ObjectGroupData = ...
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...
    class Builder:
        def __init__(self): ...
        def build(self, nodeObject: NodeObject) -> java.util.List[DataElement]: ...

class ObjectGroupDeclarations(StreamObject):
    objectDeclarationList: java.util.List = ...
    objectGroupObjectBLOBDataDeclarationList: java.util.List = ...
    def __init__(self): ...

class ObjectGroupMetadata(StreamObject):
    ObjectChangeFrequency: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    def __init__(self): ...

class ObjectGroupMetadataDeclarations(StreamObject):
    objectGroupMetadataList: java.util.List = ...
    def __init__(self): ...

class ObjectGroupObjectBLOBDataDeclaration(StreamObject):
    objectExGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objectDataBLOBExGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objectPartitionID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    objectDataSize: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    objectReferencesCount: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    cellReferencesCount: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    def __init__(self): ...

class ObjectGroupObjectData(StreamObject):
    objectExGUIDArray: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGUIDArray = ...
    cellIDArray: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CellIDArray = ...
    data: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BinaryItem = ...
    def __init__(self): ...

class ObjectGroupObjectDataBLOBReference(StreamObject):
    objectExtendedGUIDArray: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGUIDArray = ...
    cellIDArray: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CellIDArray = ...
    blobExtendedGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    def __init__(self): ...

class ObjectGroupObjectDeclare(StreamObject):
    objectExtendedGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objectPartitionID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    objectDataSize: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    objectReferencesCount: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    cellReferencesCount: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    def __init__(self): ...

class RevisionManifest(StreamObject):
    revisionID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    baseRevisionID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    def __init__(self): ...

class RevisionManifestDataElementData(DataElementData):
    revisionManifest: RevisionManifest = ...
    revisionManifestRootDeclareList: java.util.List = ...
    revisionManifestObjectGroupReferences: java.util.List = ...
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class RevisionManifestObjectGroupReferences(StreamObject):
    objectGroupExtendedGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, exGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid): ...

class RevisionManifestRootDeclare(StreamObject):
    rootExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    objectExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    def __init__(self): ...

class SignatureObject(StreamObject):
    signatureData: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.BinaryItem = ...
    def __init__(self): ...

class StorageIndexCellMapping(StreamObject):
    cellID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CellID = ...
    cellMappingExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    cellMappingSerialNumber: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.SerialNumber = ...
    def __init__(self): ...

class StorageIndexDataElementData(DataElementData):
    storageIndexManifestMapping: 'StorageIndexManifestMapping' = ...
    storageIndexCellMappingList: java.util.List = ...
    storageIndexRevisionMappingList: java.util.List = ...
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class StorageIndexManifestMapping(StreamObject):
    manifestMappingExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    manifestMappingSerialNumber: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.SerialNumber = ...
    def __init__(self): ...

class StorageIndexRevisionMapping(StreamObject):
    revisionExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    revisionMappingExGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    revisionMappingSerialNumber: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.SerialNumber = ...
    def __init__(self): ...

class StorageManifestDataElementData(DataElementData):
    storageManifestSchemaGUID: 'StorageManifestSchemaGUID' = ...
    storageManifestRootDeclareList: java.util.List = ...
    def __init__(self): ...
    def deserializeDataElementDataFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class StorageManifestRootDeclare(StreamObject):
    rootExGUID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid = ...
    cellID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.CellID = ...
    def __init__(self): ...

class StorageManifestSchemaGUID(StreamObject):
    guid: java.util.UUID = ...
    def __init__(self): ...

class StreamObjectHeaderEnd16bit(StreamObjectHeaderEnd):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, int: int): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderEnd: StreamObjectTypeHeaderEnd): ...
    def serializeToByteList(self) -> java.util.List[int]: ...
    def toUint16(self) -> int: ...

class StreamObjectHeaderEnd8bit(StreamObjectHeaderEnd):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, int: int): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderEnd: StreamObjectTypeHeaderEnd): ...
    def serializeToByteList(self) -> java.util.List[int]: ...
    def toByte(self) -> int: ...

class StreamObjectHeaderStart16bit(StreamObjectHeaderStart):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderStart: StreamObjectTypeHeaderStart): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderStart: StreamObjectTypeHeaderStart, int: int): ...
    def ToUint16(self) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class StreamObjectHeaderStart32bit(StreamObjectHeaderStart):
    largeLength: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.Compact64bitInt = ...
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderStart: StreamObjectTypeHeaderStart): ...
    @typing.overload
    def __init__(self, streamObjectTypeHeaderStart: StreamObjectTypeHeaderStart, int: int): ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class IntermediateNodeObject(NodeObject):
    def __init__(self): ...
    def getContent(self) -> java.util.List[int]: ...
    class RootNodeObjectBuilder:
        def __init__(self): ...
        def Build(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes]) -> 'IntermediateNodeObject': ...

class LeafNodeObject(NodeObject):
    dataNodeObjectData: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.DataNodeObjectData = ...
    dataHash: DataHashObject = ...
    def __init__(self): ...
    def getContent(self) -> java.util.List[int]: ...
    class IntermediateNodeObjectBuilder:
        def __init__(self): ...
        @typing.overload
        def Build(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], signatureObject: SignatureObject) -> 'LeafNodeObject': ...
        @typing.overload
        def Build(self, list: java.util.List[ObjectGroupDataElementData], objectGroupObjectData: ObjectGroupObjectData, exGuid: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.ExGuid) -> 'LeafNodeObject': ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj")``.

    CellManifestCurrentRevision: typing.Type[CellManifestCurrentRevision]
    CellManifestDataElementData: typing.Type[CellManifestDataElementData]
    DataElement: typing.Type[DataElement]
    DataElementData: typing.Type[DataElementData]
    DataElementHash: typing.Type[DataElementHash]
    DataElementPackage: typing.Type[DataElementPackage]
    DataHashObject: typing.Type[DataHashObject]
    DataSizeObject: typing.Type[DataSizeObject]
    FileDataObject: typing.Type[FileDataObject]
    IntermediateNodeObject: typing.Type[IntermediateNodeObject]
    JCIDObject: typing.Type[JCIDObject]
    LeafNodeObject: typing.Type[LeafNodeObject]
    NodeObject: typing.Type[NodeObject]
    ObjectGroupData: typing.Type[ObjectGroupData]
    ObjectGroupDataElementData: typing.Type[ObjectGroupDataElementData]
    ObjectGroupDeclarations: typing.Type[ObjectGroupDeclarations]
    ObjectGroupMetadata: typing.Type[ObjectGroupMetadata]
    ObjectGroupMetadataDeclarations: typing.Type[ObjectGroupMetadataDeclarations]
    ObjectGroupObjectBLOBDataDeclaration: typing.Type[ObjectGroupObjectBLOBDataDeclaration]
    ObjectGroupObjectData: typing.Type[ObjectGroupObjectData]
    ObjectGroupObjectDataBLOBReference: typing.Type[ObjectGroupObjectDataBLOBReference]
    ObjectGroupObjectDeclare: typing.Type[ObjectGroupObjectDeclare]
    PropertySet: typing.Type[PropertySet]
    PropertySetObject: typing.Type[PropertySetObject]
    RevisionManifest: typing.Type[RevisionManifest]
    RevisionManifestDataElementData: typing.Type[RevisionManifestDataElementData]
    RevisionManifestObjectGroupReferences: typing.Type[RevisionManifestObjectGroupReferences]
    RevisionManifestRootDeclare: typing.Type[RevisionManifestRootDeclare]
    RevisionStoreObject: typing.Type[RevisionStoreObject]
    RevisionStoreObjectGroup: typing.Type[RevisionStoreObjectGroup]
    SignatureObject: typing.Type[SignatureObject]
    StorageIndexCellMapping: typing.Type[StorageIndexCellMapping]
    StorageIndexDataElementData: typing.Type[StorageIndexDataElementData]
    StorageIndexManifestMapping: typing.Type[StorageIndexManifestMapping]
    StorageIndexRevisionMapping: typing.Type[StorageIndexRevisionMapping]
    StorageManifestDataElementData: typing.Type[StorageManifestDataElementData]
    StorageManifestRootDeclare: typing.Type[StorageManifestRootDeclare]
    StorageManifestSchemaGUID: typing.Type[StorageManifestSchemaGUID]
    StreamObject: typing.Type[StreamObject]
    StreamObjectHeaderEnd: typing.Type[StreamObjectHeaderEnd]
    StreamObjectHeaderEnd16bit: typing.Type[StreamObjectHeaderEnd16bit]
    StreamObjectHeaderEnd8bit: typing.Type[StreamObjectHeaderEnd8bit]
    StreamObjectHeaderStart: typing.Type[StreamObjectHeaderStart]
    StreamObjectHeaderStart16bit: typing.Type[StreamObjectHeaderStart16bit]
    StreamObjectHeaderStart32bit: typing.Type[StreamObjectHeaderStart32bit]
    StreamObjectParseErrorException: typing.Type[StreamObjectParseErrorException]
    StreamObjectTypeHeaderEnd: typing.Type[StreamObjectTypeHeaderEnd]
    StreamObjectTypeHeaderStart: typing.Type[StreamObjectTypeHeaderStart]
    basic: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.__module_protocol__
    chunking: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.chunking.__module_protocol__
    space: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.space.__module_protocol__

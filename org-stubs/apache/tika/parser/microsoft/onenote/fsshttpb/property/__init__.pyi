
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util
import jpype
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj
import org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic
import typing



class IProperty:
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class ArrayNumber(IProperty):
    number: int = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class EightBytesOfData(IProperty):
    data: typing.MutableSequence[int] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class FourBytesOfData(IProperty):
    data: typing.MutableSequence[int] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class NoData(IProperty):
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class OneByteOfData(IProperty):
    data: int = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class PrtArrayOfPropertyValues(IProperty):
    cProperties: int = ...
    propertyID: org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.basic.PropertyID = ...
    data: typing.MutableSequence[org.apache.tika.parser.microsoft.onenote.fsshttpb.streamobj.PropertySet] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class PrtFourBytesOfLengthFollowedByData(IProperty):
    cb: int = ...
    data: typing.MutableSequence[int] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...

class TwoBytesOfData(IProperty):
    data: typing.MutableSequence[int] = ...
    def __init__(self): ...
    def doDeserializeFromByteArray(self, byteArray: typing.Union[typing.List[int], jpype.JArray, bytes], int: int) -> int: ...
    def serializeToByteList(self) -> java.util.List[int]: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.tika.parser.microsoft.onenote.fsshttpb.property")``.

    ArrayNumber: typing.Type[ArrayNumber]
    EightBytesOfData: typing.Type[EightBytesOfData]
    FourBytesOfData: typing.Type[FourBytesOfData]
    IProperty: typing.Type[IProperty]
    NoData: typing.Type[NoData]
    OneByteOfData: typing.Type[OneByteOfData]
    PrtArrayOfPropertyValues: typing.Type[PrtArrayOfPropertyValues]
    PrtFourBytesOfLengthFollowedByData: typing.Type[PrtFourBytesOfLengthFollowedByData]
    TwoBytesOfData: typing.Type[TwoBytesOfData]
